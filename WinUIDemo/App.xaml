<Application
    x:Class="WinUIDemo.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ctrl="using:WinUIDemo.Controls"
    xmlns:local="using:WinUIDemo"
    xmlns:media="using:Microsoft.UI.Xaml.Media"
    RequestedTheme="Dark">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <XamlControlsResources xmlns="using:Microsoft.UI.Xaml.Controls" />
                <!--  Other merged dictionaries here  -->
            </ResourceDictionary.MergedDictionaries>


            <!--  Themes  -->
            <ResourceDictionary.ThemeDictionaries>
                <!--  Dark Theme Colors  -->
                <ResourceDictionary x:Key="Dark">
                    <Brush x:Key="PrimaryBrush">WhiteSmoke</Brush>
                    <Brush x:Key="SecondaryBrush">#6f8698</Brush>
                    <Brush x:Key="TertiaryBrush">#a43e4b</Brush>
                    <Brush x:Key="QuaternaryBrush">#76b9ed</Brush>
                    <Brush x:Key="QuinaryBrush">#94d446</Brush>
                    <Brush x:Key="SenaryBrush">#dc7d5e</Brush>
                    <Brush x:Key="ItemBrush">#a03b7850</Brush>
                    <Brush x:Key="WorkingBrush">#90ecf860</Brush>
                    <Brush x:Key="BackgroundBrush">#1e1e1e</Brush>
                    <Brush x:Key="SeeThroughBrush">#701e1e1e</Brush>
                    <Brush x:Key="BurntBackground">#ff381603</Brush>
                    <Brush x:Key="HeaderBrush">#656569</Brush>
                    <Brush x:Key="BorderBrush">#333337</Brush>
                    <Brush x:Key="SelectionBrush">#303034</Brush>
                    <media:AcrylicBrush
                        x:Key="CustomAcrylicBrush"
                        FallbackColor="#317ad7"
                        TintColor="SpringGreen"
                        TintLuminosityOpacity="0.01"
                        TintOpacity="0.01" />
                </ResourceDictionary>
                <!--  Light Theme Colors  -->
                <ResourceDictionary x:Key="Light">
                    <Brush x:Key="PrimaryBrush">#1a1b35</Brush>
                    <Brush x:Key="SecondaryBrush">#4f6678</Brush>
                    <Brush x:Key="TertiaryBrush">#512031</Brush>
                    <Brush x:Key="QuaternaryBrush">#216ac7</Brush>
                    <Brush x:Key="QuinaryBrush">#94d446</Brush>
                    <Brush x:Key="SenaryBrush">#dc7d5e</Brush>
                    <Brush x:Key="ItemBrush">#d020322e</Brush>
                    <Brush x:Key="WorkingBrush">#a0ecf860</Brush>
                    <Brush x:Key="BackgroundBrush">#f0f0f0</Brush>
                    <Brush x:Key="SeeThroughBrush">#701e1e1e</Brush>
                    <Brush x:Key="BurntBackground">#ff583623</Brush>
                    <Brush x:Key="HeaderBrush">#454549</Brush>
                    <Brush x:Key="BorderBrush">#232327</Brush>
                    <Brush x:Key="SelectionBrush">#707074</Brush>
                    <media:AcrylicBrush
                        x:Key="CustomAcrylicBrush"
                        FallbackColor="#317ad7"
                        TintColor="SpringGreen"
                        TintLuminosityOpacity="0.01"
                        TintOpacity="0.01" />
                </ResourceDictionary>
                <!--  Contrast Theme Colors  -->
                <ResourceDictionary x:Key="HighContrast">
                    <Brush x:Key="PrimaryBrush">#1a1b35</Brush>
                    <Brush x:Key="SecondaryBrush">#4f6678</Brush>
                    <Brush x:Key="TertiaryBrush">#a43e4b</Brush>
                    <Brush x:Key="QuaternaryBrush">#317ad7</Brush>
                    <Brush x:Key="QuinaryBrush">#94d446</Brush>
                    <Brush x:Key="SenaryBrush">#dc7d5e</Brush>
                    <Brush x:Key="ItemBrush">#3b7850</Brush>
                    <Brush x:Key="WorkingBrush">#ecf860</Brush>
                    <Brush x:Key="BackgroundBrush">#fefefe</Brush>
                    <Brush x:Key="SeeThroughBrush">#701e1e1e</Brush>
                    <Brush x:Key="BurntBackground">#ff381603</Brush>
                    <Brush x:Key="HeaderBrush">#454549</Brush>
                    <Brush x:Key="BorderBrush">#232327</Brush>
                    <Brush x:Key="SelectionBrush">#131317</Brush>
                    <media:AcrylicBrush
                        x:Key="CustomAcrylicBrush"
                        FallbackColor="#317ad7"
                        TintColor="SpringGreen"
                        TintLuminosityOpacity="1"
                        TintOpacity="1" />
                </ResourceDictionary>
            </ResourceDictionary.ThemeDictionaries>

            <!--  Fonts  -->
            <FontFamily x:Key="MDL2IconFont">Assets\#Segoe MDL2 Assets</FontFamily>

            <!--  Converters  -->
            <local:BooleanInverseConverter x:Key="BooleanInverter" />
            <local:BooleanToVisibilityConverter x:Key="BooleanVisibility" />
            <local:BooleanToVisibilityInverseConverter x:Key="BooleanVisibilityInverse" />
            <local:NullToVisibilityConverter x:Key="NullToVisibility" />
            <local:FileExistToVisibilityConverter x:Key="FileExistToVisibility" />
            <local:FullPathToFileConverter x:Key="FullPathToFile" />
            <local:StringFormatConverter x:Key="StringToFormat" />
            <local:TimeSpanConverter x:Key="TimeSpanToString" />
            <local:DaysToTimeConverter x:Key="DaysToTime" />
            <local:LevelToBrushConverter x:Key="LevelToBrush" />
            <local:LevelToBackgroundConverter x:Key="LevelToBackground" />
            <local:SizeIncreaseConverter x:Key="SizeIncrease" />
            <local:SizeDecreaseConverter x:Key="SizeDecrease" />

            <!--
                [Original Source]
                C:\Users\UserName\.nuget\packages\microsoft.windowsappsdk\1.2.22109.1\lib\net6.0-windows10.0.18362.0\Microsoft.WinUI\Themes\Generic.xaml
            -->

            <!--  Pivot Header Styler  -->
            <Style TargetType="PivotHeaderItem">
                <Setter Property="FontSize" Value="{ThemeResource PivotHeaderItemFontSize}" />
                <Setter Property="FontFamily" Value="{ThemeResource PivotHeaderItemFontFamily}" />
                <Setter Property="FontWeight" Value="{ThemeResource PivotHeaderItemThemeFontWeight}" />
                <Setter Property="CharacterSpacing" Value="{ThemeResource PivotHeaderItemCharacterSpacing}" />
                <Setter Property="Background" Value="{ThemeResource PivotHeaderItemBackgroundUnselected}" />
                <Setter Property="Foreground" Value="{ThemeResource PivotHeaderItemForegroundUnselected}" />
                <Setter Property="Padding" Value="{ThemeResource PivotHeaderItemMargin}" />
                <Setter Property="Height" Value="68" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="PivotHeaderItem">
                            <Grid
                                x:Name="Grid"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform" />
                                </Grid.RenderTransform>
                                <ContentPresenter
                                    x:Name="ContentPresenter"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    OpticalMarginAlignment="TrimSideBearings" />
                                <Rectangle
                                    x:Name="FocusPipe"
                                    Height="2"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Bottom"
                                    Fill="{ThemeResource PivotHeaderItemFocusPipeFill}"
                                    Visibility="Collapsed" />
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition
                                                GeneratedDuration="0:0:0.63"
                                                From="Unselected"
                                                To="UnselectedLocked" />
                                            <VisualTransition
                                                GeneratedDuration="0:0:0.63"
                                                From="UnselectedLocked"
                                                To="Unselected" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotHeaderItemForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotHeaderItemBackgroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="UnselectedLocked">
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="ContentPresenterTranslateTransform"
                                                    Storyboard.TargetProperty="X"
                                                    To="{ThemeResource PivotHeaderItemLockedTranslation}"
                                                    Duration="0" />
                                                <DoubleAnimation
                                                    Storyboard.TargetName="ContentPresenter"
                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                    To="0"
                                                    Duration="0" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotHeaderItemForegroundSelected}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotHeaderItemBackgroundSelected}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="UnselectedPointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotHeaderItemForegroundUnselectedPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotHeaderItemBackgroundUnselectedPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="SelectedPointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotHeaderItemForegroundSelectedPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotHeaderItemBackgroundSelectedPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="UnselectedPressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotHeaderItemForegroundUnselectedPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotHeaderItemBackgroundUnselectedPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="SelectedPressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotHeaderItemForegroundSelectedPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Grid" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource PivotHeaderItemBackgroundSelectedPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <VisualState.Setters>
                                                <Setter Target="FocusPipe.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Button Styler  -->
            <Style x:Key="MyButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="{ThemeResource PrimaryBrush}" />
                <Setter Property="Background" Value="{ThemeResource BorderBrush}" />
                <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
                <Setter Property="BorderBrush" Value="{ThemeResource AccentButtonBorderBrush}" />
                <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Padding="{TemplateBinding Padding}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AutomationProperties.AccessibilityView="Raw"
                                Background="{TemplateBinding Background}"
                                BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter.BackgroundTransition>
                                    <BrushTransition Duration="0:0:0.29" />
                                </ContentPresenter.BackgroundTransition>
                                <!-- [we can force a specific transition here]
                                <ContentPresenter.ContentTransitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition/>
                                    </TransitionCollection>
                                </ContentPresenter.ContentTransitions>
                                -->
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <!--  MouseOver State  -->
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBackgroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBorderBrushPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundPointerOver}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <!--  Pressed State  -->
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBackgroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBorderBrushPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundPressed}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <!--  Disabled State  -->
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBackgroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBorderBrushDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundDisabled}" />
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ContentPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  ListViewItem Styler  -->
            <Style x:Key="MyListViewItemStyle" TargetType="ListViewItem">
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
                <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
                <Setter Property="TabNavigation" Value="Local" />
                <Setter Property="IsHoldingEnabled" Value="True" />
                <Setter Property="Padding" Value="12,0,12,0" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
                <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
                <Setter Property="AllowDrop" Value="False" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <ListViewItemPresenter
                                x:Name="Root"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                                CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                                CheckMode="{ThemeResource ListViewItemCheckMode}"
                                ContentMargin="{TemplateBinding Padding}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Control.IsTemplateFocusTarget="True"
                                DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                DragBackground="{ThemeResource ListViewItemDragBackground}"
                                DragForeground="{ThemeResource ListViewItemDragForeground}"
                                DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                                FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                                FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                                PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                                PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                                PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                                PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                                ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                RevealBackground="{ThemeResource ListViewItemRevealBackground}"
                                RevealBorderBrush="{ThemeResource ListViewItemRevealBorderBrush}"
                                RevealBorderThickness="{ThemeResource ListViewItemRevealBorderThemeThickness}"
                                SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
                                SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                                SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
                                SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"
                                SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}">
                                <ContentPresenter.BackgroundTransition>
                                    <BrushTransition Duration="0:0:0.29" />
                                </ContentPresenter.BackgroundTransition>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Selected" />

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <revealBrushPresent:Setter
                                                    xmlns:revealBrushPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypePresent(Microsoft.UI.Xaml.Media.RevealBrush)"
                                                    Target="Root.(media:RevealBrush.State)"
                                                    Value="PointerOver" />
                                                <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <revealBrushPresent:Setter
                                                    xmlns:revealBrushPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypePresent(Microsoft.UI.Xaml.Media.RevealBrush)"
                                                    Target="Root.(media:RevealBrush.State)"
                                                    Value="PointerOver" />
                                                <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPointerOver}" />

                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PointerOverPressed">
                                            <VisualState.Setters>
                                                <revealBrushPresent:Setter
                                                    xmlns:revealBrushPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypePresent(Microsoft.UI.Xaml.Media.RevealBrush)"
                                                    Target="Root.(media:RevealBrush.State)"
                                                    Value="Pressed" />
                                                <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <revealBrushPresent:Setter
                                                    xmlns:revealBrushPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypePresent(Microsoft.UI.Xaml.Media.RevealBrush)"
                                                    Target="Root.(media:RevealBrush.State)"
                                                    Value="Pressed" />
                                                <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <revealBrushPresent:Setter
                                                    xmlns:revealBrushPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsTypePresent(Microsoft.UI.Xaml.Media.RevealBrush)"
                                                    Target="Root.(media:RevealBrush.State)"
                                                    Value="Pressed" />
                                                <Setter Target="Root.RevealBorderBrush" Value="{ThemeResource ListViewItemRevealBorderBrushPressed}" />

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />

                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="Root.RevealBorderThickness" Value="0" />

                                            </VisualState.Setters>
                                        </VisualState>

                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                            </ListViewItemPresenter>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  IsEnabledTextBlock styler with built-in VisualStateManager  -->
            <Style TargetType="ctrl:IsEnabledTextBlock">
                <Setter Property="Foreground" Value="{ThemeResource PrimaryBrush}" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ctrl:IsEnabledTextBlock">
                            <Grid
                                x:Name="grid"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{ThemeResource BackgroundBrush}"
                                BorderBrush="{ThemeResource SecondaryBrush}"
                                BorderThickness="1"
                                CornerRadius="{TemplateBinding CornerRadius}">
                                <TextBlock
                                    x:Name="label"
                                    Margin="{TemplateBinding Margin}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Text}"
                                    TextWrapping="WrapWholeWords" />
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="label.Foreground" Value="{ThemeResource SecondaryBrush}" />
                                                <Setter Target="grid.Background" Value="{ThemeResource FillBrush}" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Used by CheckBoxWithDescriptionControl.cs  -->
            <Style x:Key="SecondaryIsEnabledTextBlockStyle" TargetType="ctrl:IsEnabledTextBlock">
                <Setter Property="Foreground" Value="{ThemeResource TextFillColorSecondaryBrush}" />
                <Setter Property="FontSize" Value="12" />
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
